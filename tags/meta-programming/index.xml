<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>meta programming on Jim Chen</title><link>https://jimytc.com/tags/meta-programming/</link><description>Recent content in meta programming on Jim Chen</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 21 Apr 2020 10:10:48 +0800</lastBuildDate><atom:link href="https://jimytc.com/tags/meta-programming/index.xml" rel="self" type="application/rss+xml"/><item><title>在 Ruby 的測試中輕鬆做到參數化測試</title><link>https://jimytc.com/posts/2020/04/21/simple_parameterized_test_in_ruby/</link><pubDate>Tue, 21 Apr 2020 10:10:48 +0800</pubDate><guid>https://jimytc.com/posts/2020/04/21/simple_parameterized_test_in_ruby/</guid><description>只是個小短篇記錄最近的反思和實際測試能力的應用。
上下文（Context） 最近的兩份工作都主要是在 Rails 開發，兩份工作都是高度重視測試的團隊，不過在實際的場景不太相同一樣，前一份工作主要已經引入或者開發了改善開發效率的工具，而後者是已經有一定許多既存的測試，也有一定複雜度的架構，不過許多開發工具都還在比較早期的階段，比較沒有著墨過多在開發流程的部分。
遇到的問題 參數化測試是撰寫測試案例中非常好用的一種技巧，通常的使用情境在於測試的對象和步驟是一致的，但是輸入和輸出是不同的。
舉例來說，我們有一個類別如下。
class OpGreater attr_reader :op1, :op2 def initialize(op1, op2) @op1 = op1 @op2 = op2 end def call op1 &amp;gt; op2 end end 測試案例可以如下</description></item></channel></rss>